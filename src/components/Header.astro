---
import HeaderLink from "./HeaderLink.astro";
import config from "../content/config/config.json";
---

<header>
	<nav>
		<div class="logo-container">
			<a href="/">
				<img src="/kadikoy-koop-logo.png" alt="Kadıköy Kooperatifi Logo" class="logo" />
			</a>
		</div>
		
		<!-- Hamburger menu button for mobile -->
		<button class="hamburger" aria-label="Toggle menu" aria-expanded="false">
			<span class="hamburger-line"></span>
			<span class="hamburger-line"></span>
			<span class="hamburger-line"></span>
		</button>
		
		<div class="nav-center">
			<div class="internal-links">
				{
					config.nav.map((nav) => (
						<HeaderLink href={nav.link}>{nav.title}</HeaderLink>
					))
				}
			</div>
		</div>
	</nav>
</header>

<script>
	// Hamburger menu functionality
	function initHamburgerMenu() {
		const hamburger = document.querySelector('.hamburger');
		const navCenter = document.querySelector('.nav-center');
		
		if (!hamburger || !navCenter) return;
		
		// Remove any existing listeners to prevent duplicates
		hamburger.removeEventListener('click', toggleMenu);
		
		// Add click listener for hamburger toggle
		hamburger.addEventListener('click', toggleMenu);
		
		function toggleMenu() {
			const isExpanded = hamburger.getAttribute('aria-expanded') === 'true';
			
			hamburger.setAttribute('aria-expanded', (!isExpanded).toString());
			hamburger.classList.toggle('active');
			navCenter.classList.toggle('active');
		}
		
		// Close menu when clicking on a link (mobile)
		const navLinks = document.querySelectorAll('.internal-links a');
		navLinks.forEach(link => {
			const closeMenu = () => {
				if (window.innerWidth <= 768) {
					hamburger?.classList.remove('active');
					navCenter?.classList.remove('active');
					hamburger?.setAttribute('aria-expanded', 'false');
				}
			};
			
			// Remove existing listener if any
			link.removeEventListener('click', closeMenu);
			link.addEventListener('click', closeMenu);
		});
		
		// Close menu when resizing to desktop
		function handleResize() {
			if (window.innerWidth > 768) {
				hamburger?.classList.remove('active');
				navCenter?.classList.remove('active');
				hamburger?.setAttribute('aria-expanded', 'false');
			}
		}
		
		window.removeEventListener('resize', handleResize);
		window.addEventListener('resize', handleResize);
	}
	
	// Initialize on page load
	document.addEventListener('DOMContentLoaded', initHamburgerMenu);
	
	// Re-initialize after Astro page transitions
	document.addEventListener('astro:page-load', initHamburgerMenu);
	
	// Fallback: Also initialize immediately if DOM is already loaded
	if (document.readyState === 'loading') {
		// DOM is still loading
	} else {
		// DOM is already loaded
		initHamburgerMenu();
	}
</script>

<style>
	header {
		margin: 0;
		padding: 0 1em;
		background: white;
		box-shadow: 0 2px 8px rgba(var(--black), 5%);
		position: relative;
	}
	
	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
		max-width: 1200px;
		margin: 0 auto;
		position: relative;
	}
	
	.logo-container {
		display: flex;
		align-items: center;
		flex-shrink: 0;
		z-index: 1001;
	}
	
	.logo {
		height: 60px;
		width: auto;
		max-width: 200px;
	}
	
	/* Hamburger menu button */
	.hamburger {
		display: none;
		flex-direction: column;
		background: none;
		border: none;
		cursor: pointer;
		padding: 0.5rem;
		z-index: 1001;
		position: relative;
	}
	
	.hamburger-line {
		width: 25px;
		height: 3px;
		background-color: rgb(var(--black));
		margin: 3px 0;
		transition: 0.3s;
		border-radius: 2px;
	}
	
	.hamburger.active .hamburger-line:nth-child(1) {
		transform: rotate(-45deg) translate(-5px, 6px);
	}
	
	.hamburger.active .hamburger-line:nth-child(2) {
		opacity: 0;
	}
	
	.hamburger.active .hamburger-line:nth-child(3) {
		transform: rotate(45deg) translate(-5px, -6px);
	}
	
	.nav-center {
		flex: 1;
		display: flex;
		justify-content: center;
	}
	
	.internal-links {
		display: flex;
		align-items: center;
		gap: 2rem;
	}
	
	nav a {
		padding: 1em 0.5em;
		color: rgb(var(--black));
		border-bottom: 4px solid transparent;
		text-decoration: none;
		transition: all 0.3s ease;
		font-weight: 500;
	}
	
	nav a:hover {
		color: var(--accent);
		border-bottom-color: var(--accent);
	}
	
	nav a.active {
		text-decoration: none;
		border-bottom-color: var(--accent);
		color: var(--accent);
	}
	
	/* Mobile styles */
	@media (max-width: 768px) {
		.hamburger {
			display: flex;
		}
		
		.nav-center {
			position: absolute;
			top: 100%;
			left: 0;
			right: 0;
			background: white;
			box-shadow: 0 4px 6px rgba(var(--black), 10%);
			transform: translateY(-100%);
			opacity: 0;
			visibility: hidden;
			transition: all 0.3s ease;
			z-index: 1000;
		}
		
		.nav-center.active {
			transform: translateY(0);
			opacity: 1;
			visibility: visible;
		}
		
		.internal-links {
			flex-direction: column;
			gap: 0;
			padding: 1rem 0;
		}
		
		nav a {
			padding: 0.75rem 1rem;
			width: 100%;
			text-align: center;
			border-bottom: 1px solid rgba(var(--gray-light), 50%);
			border-radius: 0;
		}
		
		nav a:last-child {
			border-bottom: none;
		}
		
		nav a:hover {
			background-color: rgba(var(--accent), 10%);
			border-bottom-color: transparent;
		}
		
		nav a.active {
			background-color: rgba(var(--accent), 15%);
			border-bottom-color: transparent;
		}
		
		.logo {
			height: 50px;
		}
	}
	
	/* Extra small mobile */
	@media (max-width: 480px) {
		header {
			padding: 0 0.5em;
		}
		
		.logo {
			height: 45px;
		}
		
		nav a {
			padding: 0.6rem 1rem;
			font-size: 0.9rem;
		}
	}
</style>
